openapi: 3.0.0
info:
  title: Service Avito API
  version: 1.0.0
  description: API для сервиса Avito, позволяющий пользователям аутентифицироваться, регистрироваться, отправлять монеты, покупать товары и получать информацию о своем аккаунте.
servers:
  - url: http://localhost:5001
tags:
  - name: Service-Avito
  - name: Chek
paths:
  /:
    get:
      tags:
        - Chek
      summary: Проверка подключения к базе данных
      responses:
        '200':
          description: Успешное подключение к базе данных
          content:
            text/html:
              schema:
                type: string
                example: '<h1>Подключение успешно!</h1>'
        '500':
          description: Ошибка подключения к базе данных
          content:
            text/html:
              schema:
                type: string
                example: '<h1>Ошибка подключения:</h1><p>Описание ошибки</p>'
  /api/auth:
    post:
      tags:
        - Service-Avito
      summary: Аутентификация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/info:
    get:
      tags:
        - Service-Avito
      summary: Получение информации о пользователе
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение информации
          content:
            application/json:
              schema:
                type: object
                properties:
                  coins:
                    type: integer
                  inventory:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        quantity:
                          type: integer
                  coinHistory:
                    type: object
                    properties:
                      received:
                        type: array
                        items:
                          type: object
                          properties:
                            fromUser :
                              type: string
                            amount:
                              type: integer
                      sent:
                        type: array
                        items:
                          type: object
                          properties:
                            toUser :
                              type: string
                            amount:
                              type: integer
                  purchases:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        quantity:
                          type: integer
        '401':
          description: Необходима аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/sendCoin:
    post:
      tags:
        - Service-Avito
      summary: Отправка монет другому пользователю
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCoinRequest'
      responses:
        '200':
          description: Монеты успешно отправлены
        '400':
          description: Ошибка при отправке монет
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/buy/{item}:
    get:
      tags:
        - Service-Avito
      summary: Покупка товара
      security:
        - bearerAuth: []
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Товар успешно куплен
        '400':
          description: Ошибка при покупке товара
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/register:
    post:
      tags:
        - Service-Avito
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
        '400':
          description: Ошибка при регистрации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        errors:
          type: string
          description: Сообщение об ошибке, описывающее проблему.

    AuthRequest:
      type: object
      properties:
        username:
          type: string
          description: Имя пользователя для аутентификации.
        password:
          type: string
          format: password
          description: Пароль для аутентификации.
      required:
        - username
        - password

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT-токен для доступа к защищенным ресурсам.

    SendCoinRequest:
      type: object
      properties:
        recipient:
          type: string
          description: Имя пользователя, которому нужно отправить монеты.
        amount:
          type: integer
          description: Количество монет, которые необходимо отправить.
      required:
        - recipient
        - amount